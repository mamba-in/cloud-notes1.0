import{_ as n,f as s,e as a,N as t}from"./plugin-vue_export-helper.147b70e9.js";const g='{"title":"\u6570\u636E mock&\u8054\u8C03","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5F00\u53D1\u73AF\u5883","slug":"\u5F00\u53D1\u73AF\u5883"},{"level":3,"title":"\u914D\u7F6E","slug":"\u914D\u7F6E"},{"level":3,"title":"\u8DE8\u57DF\u5904\u7406","slug":"\u8DE8\u57DF\u5904\u7406"},{"level":3,"title":"\u6CA1\u6709\u8DE8\u57DF\u65F6\u7684\u914D\u7F6E","slug":"\u6CA1\u6709\u8DE8\u57DF\u65F6\u7684\u914D\u7F6E"},{"level":3,"title":"\u8DE8\u57DF\u539F\u7406\u89E3\u6790","slug":"\u8DE8\u57DF\u539F\u7406\u89E3\u6790"},{"level":2,"title":"\u751F\u4EA7\u73AF\u5883","slug":"\u751F\u4EA7\u73AF\u5883"},{"level":2,"title":"\u63A5\u53E3\u8BF7\u6C42","slug":"\u63A5\u53E3\u8BF7\u6C42"},{"level":2,"title":"axios \u914D\u7F6E","slug":"axios-\u914D\u7F6E"},{"level":3,"title":"index.ts \u914D\u7F6E\u8BF4\u660E","slug":"index-ts-\u914D\u7F6E\u8BF4\u660E"},{"level":3,"title":"\u66F4\u6539\u53C2\u6570\u683C\u5F0F","slug":"\u66F4\u6539\u53C2\u6570\u683C\u5F0F"},{"level":3,"title":"\u591A\u4E2A\u63A5\u53E3\u5730\u5740","slug":"\u591A\u4E2A\u63A5\u53E3\u5730\u5740"},{"level":3,"title":"\u5220\u9664\u8BF7\u6C42 URL \u643A\u5E26\u7684\u65F6\u95F4\u6233\u53C2\u6570","slug":"\u5220\u9664\u8BF7\u6C42-url-\u643A\u5E26\u7684\u65F6\u95F4\u6233\u53C2\u6570"},{"level":2,"title":"Mock \u670D\u52A1","slug":"mock-\u670D\u52A1"},{"level":3,"title":"\u672C\u5730 Mock","slug":"\u672C\u5730-mock"},{"level":3,"title":"\u7EBF\u4E0A mock","slug":"\u7EBF\u4E0A-mock"}],"relativePath":"guide/mock.md","lastUpdated":1652416785008}',p={},o=t(`<h1 id="\u6570\u636E-mock-\u8054\u8C03"><a class="header-anchor" href="#\u6570\u636E-mock-\u8054\u8C03" aria-hidden="true">#</a> \u6570\u636E mock&amp;\u8054\u8C03</h1><h2 id="\u5F00\u53D1\u73AF\u5883"><a class="header-anchor" href="#\u5F00\u53D1\u73AF\u5883" aria-hidden="true">#</a> \u5F00\u53D1\u73AF\u5883</h2><p>\u5982\u679C\u524D\u7AEF\u5E94\u7528\u548C\u540E\u7AEF\u63A5\u53E3\u670D\u52A1\u5668\u6CA1\u6709\u8FD0\u884C\u5728\u540C\u4E00\u4E2A\u4E3B\u673A\u4E0A\uFF0C\u4F60\u9700\u8981\u5728\u5F00\u53D1\u73AF\u5883\u4E0B\u5C06\u63A5\u53E3\u8BF7\u6C42\u4EE3\u7406\u5230\u63A5\u53E3\u670D\u52A1\u5668\u3002</p><p>\u5982\u679C\u662F\u540C\u4E00\u4E2A\u4E3B\u673A\uFF0C\u53EF\u4EE5\u76F4\u63A5\u8BF7\u6C42\u5177\u4F53\u7684\u63A5\u53E3\u5730\u5740\u3002</p><h3 id="\u914D\u7F6E"><a class="header-anchor" href="#\u914D\u7F6E" aria-hidden="true">#</a> \u914D\u7F6E</h3><p>\u5F00\u53D1\u73AF\u5883\u65F6\u5019\uFF0C\u63A5\u53E3\u5730\u5740\u5728\u9879\u76EE\u6839\u76EE\u5F55\u4E0B</p><p><a href="https://github.com/vbenjs/vue-vben-admin/tree/main/.env.development" target="_blank" rel="noopener noreferrer">.env.development</a> \u6587\u4EF6\u914D\u7F6E</p><div class="language-bash"><pre><code><span class="token comment"># vite \u672C\u5730\u8DE8\u57DF\u4EE3\u7406</span>
<span class="token assign-left variable">VITE_PROXY</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;/basic-api&quot;</span>,<span class="token string">&quot;http://localhost:3000&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token comment"># \u63A5\u53E3\u5730\u5740</span>
<span class="token assign-left variable">VITE_GLOB_API_URL</span><span class="token operator">=</span>/api
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>.env \u6587\u4EF6\u4E2D\u7684\u5B57\u6BB5\u5982\u679C\u662F\u5B57\u7B26\u4E32\uFF0C\u5219\u65E0\u9700\u52A0\u5F15\u53F7\uFF0C\u9ED8\u8BA4\u5168\u90E8\u4E3A\u5B57\u7B26\u4E32</li><li>VITE_PROXY \u4E0D\u80FD\u6362\u884C</li></ul></div><h3 id="\u8DE8\u57DF\u5904\u7406"><a class="header-anchor" href="#\u8DE8\u57DF\u5904\u7406" aria-hidden="true">#</a> \u8DE8\u57DF\u5904\u7406</h3><p>\u5982\u679C\u4F60\u5728 <code>src/api/</code> \u4E0B\u9762\u7684\u63A5\u53E3\u4E3A\u4E0B\u65B9\u4EE3\u7801\uFF0C\u4E14 <strong>.env.development</strong> \u6587\u4EF6\u914D\u7F6E\u5982\u4E0B\u6CE8\u91CA\uFF0C\u5219\u5728\u63A7\u5236\u53F0\u770B\u5230\u7684\u5730\u5740\u4E3A <code>http://localhost:3100/basic-api/login</code>\u3002</p><p>\u7531\u4E8E <code>/basic-api</code> \u5339\u914D\u5230\u4E86\u8BBE\u7F6E\u7684 <code>VITE_PROXY</code>\uFF0C\u6240\u4EE5\u4E0A\u65B9\u5B9E\u9645\u662F\u8BF7\u6C42 <strong><a href="http://localhost:3000/login" target="_blank" rel="noopener noreferrer">http://localhost:3000/login</a></strong>\uFF0C\u8FD9\u6837\u540C\u65F6\u4E5F\u89E3\u51B3\u4E86\u8DE8\u57DF\u95EE\u9898\u3002\uFF08<strong>3100</strong>\u4E3A\u9879\u76EE\u7AEF\u53E3\u53F7\uFF0C<strong><a href="http://localhost:3000" target="_blank" rel="noopener noreferrer">http://localhost:3000</a></strong>\u4E3APROXY\u4EE3\u7406\u7684\u76EE\u6807\u5730\u5740\uFF09</p><div class="language-ts"><pre><code><span class="token comment">// .env.development</span>
<span class="token comment">// VITE_PROXY=[[&quot;/basic-api&quot;,&quot;http://localhost:3000&quot;]]</span>
<span class="token comment">// VITE_GLOB_API_URL=/basic-api</span>

<span class="token keyword">enum</span> Api <span class="token punctuation">{</span>
  Login <span class="token operator">=</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * @description: \u7528\u6237\u767B\u9646
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">loginApi</span><span class="token punctuation">(</span>params<span class="token operator">:</span> LoginParams<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">request</span><span class="token generic class-name"><span class="token operator">&lt;</span>LoginResultModel<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token operator">:</span> Api<span class="token punctuation">.</span>Login<span class="token punctuation">,</span>
    method<span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    params<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u6CA1\u6709\u8DE8\u57DF\u65F6\u7684\u914D\u7F6E"><a class="header-anchor" href="#\u6CA1\u6709\u8DE8\u57DF\u65F6\u7684\u914D\u7F6E" aria-hidden="true">#</a> \u6CA1\u6709\u8DE8\u57DF\u65F6\u7684\u914D\u7F6E</h3><p>\u5982\u679C\u6CA1\u6709\u8DE8\u57DF\u95EE\u9898\uFF0C\u53EF\u4EE5\u76F4\u63A5\u5FFD\u7565 <strong>VITE_PROXY</strong> \u914D\u7F6E\uFF0C\u76F4\u63A5\u5C06\u63A5\u53E3\u5730\u5740\u8BBE\u7F6E\u5728 <strong>VITE_GLOB_API_URL</strong></p><div class="language-bash"><pre><code><span class="token comment"># \u4F8B\u5982\u63A5\u53E3\u5730\u5740\u4E3A http://localhost:3000 \u5219</span>
<span class="token assign-left variable">VITE_GLOB_API_URL</span><span class="token operator">=</span>http://localhost:3000
</code></pre></div><p>\u5982\u679C\u6709\u8DE8\u57DF\u95EE\u9898\uFF0C\u5C06 <strong>VITE_GLOB_API_URL</strong> \u8BBE\u7F6E\u4E3A\u8DDF <strong>VITE_PROXY</strong> \u5185\u5176\u4E2D\u4E00\u4E2A\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u9879\u4E00\u81F4\u7684\u503C\u5373\u53EF\u3002</p><p>\u4E0B\u65B9\u7684\u63A5\u53E3\u5730\u5740\u8BBE\u7F6E\u4E3A <code>/basic-api</code>\uFF0C\u5F53\u8BF7\u6C42\u53D1\u51FA\u7684\u65F6\u5019\u4F1A\u7ECF\u8FC7 Vite \u7684 proxy \u4EE3\u7406\uFF0C\u5339\u914D\u5230\u4E86\u6211\u4EEC\u8BBE\u7F6E\u7684 <strong>VITE_PROXY</strong> \u89C4\u5219\uFF0C\u5C06 <code>/basic-api</code> \u8F6C\u5316\u4E3A <code>http://localhost:3000</code> \u8FDB\u884C\u8BF7\u6C42</p><div class="language-bash"><pre><code><span class="token comment"># \u4F8B\u5982\u63A5\u53E3\u5730\u5740\u4E3A http://localhost:3000 \u5219</span>
<span class="token assign-left variable">VITE_PROXY</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;/basic-api&quot;</span>,<span class="token string">&quot;http://localhost:3000&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token comment"># \u63A5\u53E3\u5730\u5740</span>
<span class="token assign-left variable">VITE_GLOB_API_URL</span><span class="token operator">=</span>/basic-api
</code></pre></div><h3 id="\u8DE8\u57DF\u539F\u7406\u89E3\u6790"><a class="header-anchor" href="#\u8DE8\u57DF\u539F\u7406\u89E3\u6790" aria-hidden="true">#</a> \u8DE8\u57DF\u539F\u7406\u89E3\u6790</h3><p>\u5728 <code>vite.config.ts</code> \u914D\u7F6E\u6587\u4EF6\u4E2D\uFF0C\u63D0\u4F9B\u4E86 server \u7684 proxy \u529F\u80FD\uFF0C\u7528\u4E8E\u4EE3\u7406 API \u8BF7\u6C42\u3002</p><div class="language-ts"><pre><code>server<span class="token operator">:</span> <span class="token punctuation">{</span>
  proxy<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;/basic-api&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
      target<span class="token operator">:</span> <span class="token string">&#39;http://localhost:3000&#39;</span><span class="token punctuation">,</span>
      changeOrigin<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      ws<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token function-variable function">rewrite</span><span class="token operator">:</span> <span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">^/basic-api</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">\u6CE8\u610F</p><p>\u4ECE\u6D4F\u89C8\u5668\u63A7\u5236\u53F0\u7684 Network \u770B\uFF0C\u8BF7\u6C42\u662F <code>http://localhost:3000/basic-api/xxx</code>\uFF0C\u8FD9\u662F\u56E0\u4E3A proxy \u914D\u7F6E\u4E0D\u4F1A\u6539\u53D8\u672C\u5730\u8BF7\u6C42\u7684 url\u3002</p></div><h2 id="\u751F\u4EA7\u73AF\u5883"><a class="header-anchor" href="#\u751F\u4EA7\u73AF\u5883" aria-hidden="true">#</a> \u751F\u4EA7\u73AF\u5883</h2><p>\u751F\u4EA7\u73AF\u5883\u63A5\u53E3\u5730\u5740\u5728\u9879\u76EE\u6839\u76EE\u5F55\u4E0B <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/.env.production" target="_blank" rel="noopener noreferrer">.env.production</a> \u6587\u4EF6\u914D\u7F6E\u3002</p><p>\u751F\u4EA7\u73AF\u5883\u63A5\u53E3\u5730\u5740\u503C\u9700\u8981\u4FEE\u6539 <strong>VITE_GLOB_API_URL</strong>\uFF0C\u5982\u679C\u51FA\u73B0\u8DE8\u57DF\u95EE\u9898\uFF0C\u53EF\u4EE5\u4F7F\u7528 nginx \u6216\u8005\u540E\u53F0\u5F00\u542F cors \u8FDB\u884C\u5904\u7406</p><div class="tip custom-block"><p class="custom-block-title">\u6253\u5305\u540E\u5982\u4F55\u8FDB\u884C\u5730\u5740\u4FEE\u6539?</p><p><strong>VITE_GLOB_*</strong> \u5F00\u5934\u7684\u53D8\u91CF\u4F1A\u5728\u6253\u5305\u7684\u65F6\u5019\u6CE8\u5165 <strong>_app.config.js</strong> \u6587\u4EF6\u5185\u3002</p><p>\u5728 <strong>dist/_app.config.js</strong> \u4FEE\u6539\u76F8\u5E94\u7684\u63A5\u53E3\u5730\u5740\u540E\u5237\u65B0\u9875\u9762\u5373\u53EF\uFF0C\u4E0D\u9700\u8981\u5728\u6839\u636E\u4E0D\u540C\u73AF\u5883\u6253\u5305\u591A\u6B21\uFF0C\u4E00\u6B21\u6253\u5305\u53EF\u4EE5\u7528\u4E8E\u591A\u4E2A\u4E0D\u540C\u63A5\u53E3\u73AF\u5883\u7684\u90E8\u7F72\u3002</p></div><h2 id="\u63A5\u53E3\u8BF7\u6C42"><a class="header-anchor" href="#\u63A5\u53E3\u8BF7\u6C42" aria-hidden="true">#</a> \u63A5\u53E3\u8BF7\u6C42</h2><p>\u5728 vue-vben-admin \u4E2D:</p><ol><li>\u9875\u9762\u4EA4\u4E92\u64CD\u4F5C\uFF1B</li><li>\u8C03\u7528\u7EDF\u4E00\u7BA1\u7406\u7684 api \u8BF7\u6C42\u51FD\u6570\uFF1B</li><li>\u4F7F\u7528\u5C01\u88C5\u7684 axios.ts \u53D1\u9001\u8BF7\u6C42\uFF1B</li><li>\u83B7\u53D6\u670D\u52A1\u7AEF\u8FD4\u56DE\u6570\u636E</li><li>\u66F4\u65B0 data\uFF1B</li></ol><p>\u63A5\u53E3\u7EDF\u4E00\u5B58\u653E\u4E8E <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/api" target="_blank" rel="noopener noreferrer">src/api/</a> \u4E0B\u9762\u7BA1\u7406</p><p>\u4EE5\u767B\u9646\u63A5\u53E3\u4E3A\u4F8B:</p><p>\u5728 <strong>src/api/</strong> \u5185\u65B0\u5EFA\u6A21\u5757\u6587\u4EF6\uFF0C\u5176\u4E2D\u53C2\u6570\u4E0E\u8FD4\u56DE\u503C\u6700\u597D\u5B9A\u4E49\u4E00\u4E0B\u7C7B\u578B\uFF0C\u65B9\u4FBF\u6821\u9A8C\u3002\u867D\u7136\u9EBB\u70E6\uFF0C\u4F46\u662F\u540E\u7EED\u7EF4\u62A4\u5B57\u6BB5\u5F88\u65B9\u4FBF\u3002</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u7C7B\u578B\u5B9A\u4E49\u6587\u4EF6\u53EF\u4EE5\u62BD\u53D6\u51FA\u53BB\u7EDF\u4E00\u7BA1\u7406\uFF0C\u5177\u4F53\u53C2\u8003\u9879\u76EE</p></div><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defHttp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/utils/http/axios&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> LoginParams<span class="token punctuation">,</span> LoginResultModel <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./model/userModel&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">enum</span> Api <span class="token punctuation">{</span>
  Login <span class="token operator">=</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">loginApi</span><span class="token punctuation">(</span>params<span class="token operator">:</span> LoginParams<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> defHttp<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">request</span><span class="token generic class-name"><span class="token operator">&lt;</span>LoginResultModel<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token operator">:</span> Api<span class="token punctuation">.</span>Login<span class="token punctuation">,</span>
    method<span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    params<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="axios-\u914D\u7F6E"><a class="header-anchor" href="#axios-\u914D\u7F6E" aria-hidden="true">#</a> axios \u914D\u7F6E</h2><p><strong>axios</strong> \u8BF7\u6C42\u5C01\u88C5\u5B58\u653E\u4E8E <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/utils/http/axios" target="_blank" rel="noopener noreferrer">src/utils/http/axios</a> \u6587\u4EF6\u5939\u5185\u90E8</p><p>\u9664 <code>index.ts</code> \u6587\u4EF6\u5185\u5BB9\u9700\u8981\u6839\u636E\u9879\u76EE\u81EA\u884C\u4FEE\u6539\u5916\uFF0C\u5176\u4F59\u6587\u4EF6\u65E0\u9700\u4FEE\u6539</p><div class="language-js"><pre><code>
\u251C\u2500\u2500 Axios<span class="token punctuation">.</span>ts <span class="token comment">// axios\u5B9E\u4F8B</span>
\u251C\u2500\u2500 axiosCancel<span class="token punctuation">.</span>ts <span class="token comment">// axiosCancel\u5B9E\u4F8B\uFF0C\u53D6\u6D88\u91CD\u590D\u8BF7\u6C42</span>
\u251C\u2500\u2500 axiosTransform<span class="token punctuation">.</span>ts <span class="token comment">// \u6570\u636E\u8F6C\u6362\u7C7B</span>
\u251C\u2500\u2500 checkStatus<span class="token punctuation">.</span>ts <span class="token comment">// \u8FD4\u56DE\u72B6\u6001\u503C\u6821\u9A8C</span>
\u251C\u2500\u2500 index<span class="token punctuation">.</span>ts <span class="token comment">// \u63A5\u53E3\u8FD4\u56DE\u7EDF\u4E00\u5904\u7406</span>

</code></pre></div><h3 id="index-ts-\u914D\u7F6E\u8BF4\u660E"><a class="header-anchor" href="#index-ts-\u914D\u7F6E\u8BF4\u660E" aria-hidden="true">#</a> index.ts \u914D\u7F6E\u8BF4\u660E</h3><div class="language-ts"><pre><code><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VAxios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// \u8BA4\u8BC1\u65B9\u6848\uFF0C\u4F8B\u5982: Bearer</span>
  <span class="token comment">// https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication#authentication_schemes</span>
  authenticationScheme<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// \u63A5\u53E3\u8D85\u65F6\u65F6\u95F4 \u5355\u4F4D\u6BEB\u79D2</span>
  timeout<span class="token operator">:</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span>
  <span class="token comment">// \u63A5\u53E3\u53EF\u80FD\u4F1A\u6709\u901A\u7528\u7684\u5730\u5740\u90E8\u5206\uFF0C\u53EF\u4EE5\u7EDF\u4E00\u62BD\u53D6\u51FA\u6765</span>
  prefixUrl<span class="token operator">:</span> prefix<span class="token punctuation">,</span>
  headers<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> ContentTypeEnum<span class="token punctuation">.</span><span class="token constant">JSON</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u6570\u636E\u5904\u7406\u65B9\u5F0F\uFF0C\u89C1\u4E0B\u65B9\u8BF4\u660E</span>
  transform<span class="token punctuation">,</span>
  <span class="token comment">// \u914D\u7F6E\u9879\uFF0C\u4E0B\u9762\u7684\u9009\u9879\u90FD\u53EF\u4EE5\u5728\u72EC\u7ACB\u7684\u63A5\u53E3\u8BF7\u6C42\u4E2D\u8986\u76D6</span>
  requestOptions<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9ED8\u8BA4\u5C06prefix \u6DFB\u52A0\u5230url</span>
    joinPrefix<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">// \u662F\u5426\u8FD4\u56DE\u539F\u751F\u54CD\u5E94\u5934 \u6BD4\u5982\uFF1A\u9700\u8981\u83B7\u53D6\u54CD\u5E94\u5934\u65F6\u4F7F\u7528\u8BE5\u5C5E\u6027</span>
    isReturnNativeResponse<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token comment">// \u9700\u8981\u5BF9\u8FD4\u56DE\u6570\u636E\u8FDB\u884C\u5904\u7406</span>
    isTransformRequestResult<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">// post\u8BF7\u6C42\u7684\u65F6\u5019\u6DFB\u52A0\u53C2\u6570\u5230url</span>
    joinParamsToUrl<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token comment">// \u683C\u5F0F\u5316\u63D0\u4EA4\u53C2\u6570\u65F6\u95F4</span>
    formatDate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">// \u6D88\u606F\u63D0\u793A\u7C7B\u578B</span>
    errorMessageMode<span class="token operator">:</span> <span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// \u63A5\u53E3\u5730\u5740</span>
    apiUrl<span class="token operator">:</span> globSetting<span class="token punctuation">.</span>apiUrl<span class="token punctuation">,</span>
    <span class="token comment">//  \u662F\u5426\u52A0\u5165\u65F6\u95F4\u6233</span>
    joinTime<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">// \u5FFD\u7565\u91CD\u590D\u8BF7\u6C42</span>
    ignoreCancelToken<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>transform \u6570\u636E\u5904\u7406\u8BF4\u660E</strong></p><p>\u7C7B\u578B\u5B9A\u4E49\uFF0C\u89C1 <strong>axiosTransform.ts</strong> \u6587\u4EF6</p><div class="language-js"><pre><code><span class="token keyword">export</span> abstract <span class="token keyword">class</span> <span class="token class-name">AxiosTransform</span> <span class="token punctuation">{</span>
  <span class="token comment">/**
   * @description: \u8BF7\u6C42\u4E4B\u524D\u5904\u7406\u914D\u7F6E
   */</span>
  beforeRequestHook<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">config</span><span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">,</span> <span class="token literal-property property">options</span><span class="token operator">:</span> RequestOptions</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> AxiosRequestConfig<span class="token punctuation">;</span>

  <span class="token comment">/**
   * @description: \u8BF7\u6C42\u6210\u529F\u5904\u7406
   */</span>
  transformRequestData<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">res</span><span class="token operator">:</span> AxiosResponse<span class="token operator">&lt;</span>Result<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token literal-property property">options</span><span class="token operator">:</span> RequestOptions</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> any<span class="token punctuation">;</span>

  <span class="token comment">/**
   * @description: \u8BF7\u6C42\u5931\u8D25\u5904\u7406
   */</span>
  requestCatch<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">e</span><span class="token operator">:</span> Error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span><span class="token punctuation">;</span>

  <span class="token comment">/**
   * @description: \u8BF7\u6C42\u4E4B\u524D\u7684\u62E6\u622A\u5668
   */</span>
  requestInterceptors<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">config</span><span class="token operator">:</span> AxiosRequestConfig</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> AxiosRequestConfig<span class="token punctuation">;</span>

  <span class="token comment">/**
   * @description: \u8BF7\u6C42\u4E4B\u540E\u7684\u62E6\u622A\u5668
   */</span>
  responseInterceptors<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">res</span><span class="token operator">:</span> AxiosResponse<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> AxiosResponse<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span><span class="token punctuation">;</span>

  <span class="token comment">/**
   * @description: \u8BF7\u6C42\u4E4B\u524D\u7684\u62E6\u622A\u5668\u9519\u8BEF\u5904\u7406
   */</span>
  requestInterceptorsCatch<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">error</span><span class="token operator">:</span> Error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>

  <span class="token comment">/**
   * @description: \u8BF7\u6C42\u4E4B\u540E\u7684\u62E6\u622A\u5668\u9519\u8BEF\u5904\u7406
   */</span>
  responseInterceptorsCatch<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">error</span><span class="token operator">:</span> Error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


</code></pre></div><p>\u9879\u76EE\u9ED8\u8BA4 transform \u5904\u7406\u903B\u8F91\uFF0C\u53EF\u4EE5\u6839\u636E\u5404\u81EA\u9879\u76EE\u8FDB\u884C\u5904\u7406\u3002\u4E00\u822C\u9700\u8981\u66F4\u6539\u7684\u90E8\u5206\u4E3A\u4E0B\u65B9\u4EE3\u7801\uFF0C\u89C1\u4EE3\u7801\u6CE8\u91CA\u8BF4\u660E</p><div class="language-js"><pre><code><span class="token comment">/**
 * @description: \u6570\u636E\u5904\u7406\uFF0C\u65B9\u4FBF\u533A\u5206\u591A\u79CD\u5904\u7406\u65B9\u5F0F
 */</span>
<span class="token keyword">const</span> <span class="token literal-property property">transform</span><span class="token operator">:</span> AxiosTransform <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">/**
   * @description: \u5904\u7406\u8BF7\u6C42\u6570\u636E\u3002\u5982\u679C\u6570\u636E\u4E0D\u662F\u9884\u671F\u683C\u5F0F\uFF0C\u53EF\u76F4\u63A5\u629B\u51FA\u9519\u8BEF
   */</span>
  <span class="token function-variable function">transformRequestHook</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">res</span><span class="token operator">:</span> AxiosResponse<span class="token operator">&lt;</span>Result<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token literal-property property">options</span><span class="token operator">:</span> RequestOptions</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> t <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useI18n</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> isTransformResponse<span class="token punctuation">,</span> isReturnNativeResponse <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>
    <span class="token comment">// \u662F\u5426\u8FD4\u56DE\u539F\u751F\u54CD\u5E94\u5934 \u6BD4\u5982\uFF1A\u9700\u8981\u83B7\u53D6\u54CD\u5E94\u5934\u65F6\u4F7F\u7528\u8BE5\u5C5E\u6027</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isReturnNativeResponse<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4E0D\u8FDB\u884C\u4EFB\u4F55\u5904\u7406\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
    <span class="token comment">// \u7528\u4E8E\u9875\u9762\u4EE3\u7801\u53EF\u80FD\u9700\u8981\u76F4\u63A5\u83B7\u53D6code\uFF0Cdata\uFF0Cmessage\u8FD9\u4E9B\u4FE1\u606F\u65F6\u5F00\u542F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isTransformResponse<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> res<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u9519\u8BEF\u7684\u65F6\u5019\u8FD4\u56DE</span>

    <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> res<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// return &#39;[HTTP] Request has no return value&#39;;</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;sys.api.apiRequestFailed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//  \u8FD9\u91CC code\uFF0Cresult\uFF0Cmessage\u4E3A \u540E\u53F0\u7EDF\u4E00\u7684\u5B57\u6BB5\uFF0C\u9700\u8981\u5728 types.ts\u5185\u4FEE\u6539\u4E3A\u9879\u76EE\u81EA\u5DF1\u7684\u63A5\u53E3\u8FD4\u56DE\u683C\u5F0F</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> code<span class="token punctuation">,</span> result<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>

    <span class="token comment">// \u8FD9\u91CC\u903B\u8F91\u53EF\u4EE5\u6839\u636E\u9879\u76EE\u8FDB\u884C\u4FEE\u6539</span>
    <span class="token keyword">const</span> hasSuccess <span class="token operator">=</span> data <span class="token operator">&amp;&amp;</span> Reflect<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">&#39;code&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> code <span class="token operator">===</span> ResultEnum<span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasSuccess<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5728\u6B64\u5904\u6839\u636E\u81EA\u5DF1\u9879\u76EE\u7684\u5B9E\u9645\u60C5\u51B5\u5BF9\u4E0D\u540C\u7684code\u6267\u884C\u4E0D\u540C\u7684\u64CD\u4F5C</span>
    <span class="token comment">// \u5982\u679C\u4E0D\u5E0C\u671B\u4E2D\u65AD\u5F53\u524D\u8BF7\u6C42\uFF0C\u8BF7return\u6570\u636E\uFF0C\u5426\u5219\u76F4\u63A5\u629B\u51FA\u5F02\u5E38\u5373\u53EF</span>
    <span class="token keyword">let</span> timeoutMsg <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>code<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> ResultEnum<span class="token punctuation">.</span><span class="token constant">TIMEOUT</span><span class="token operator">:</span>
        timeoutMsg <span class="token operator">=</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;sys.api.timeoutMessage&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          timeoutMsg <span class="token operator">=</span> message<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// errorMessageMode=\u2018modal\u2019\u7684\u65F6\u5019\u4F1A\u663E\u793Amodal\u9519\u8BEF\u5F39\u7A97\uFF0C\u800C\u4E0D\u662F\u6D88\u606F\u63D0\u793A\uFF0C\u7528\u4E8E\u4E00\u4E9B\u6BD4\u8F83\u91CD\u8981\u7684\u9519\u8BEF</span>
    <span class="token comment">// errorMessageMode=&#39;none&#39; \u4E00\u822C\u662F\u8C03\u7528\u65F6\u660E\u786E\u8868\u793A\u4E0D\u5E0C\u671B\u81EA\u52A8\u5F39\u51FA\u9519\u8BEF\u63D0\u793A</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>errorMessageMode <span class="token operator">===</span> <span class="token string">&#39;modal&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">createErrorModal</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;sys.api.errorTip&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">content</span><span class="token operator">:</span> timeoutMsg <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>errorMessageMode <span class="token operator">===</span> <span class="token string">&#39;message&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      createMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>timeoutMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>timeoutMsg <span class="token operator">||</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;sys.api.apiRequestFailed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// \u8BF7\u6C42\u4E4B\u524D\u5904\u7406config</span>
  <span class="token function-variable function">beforeRequestHook</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">config<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> apiUrl<span class="token punctuation">,</span> joinPrefix<span class="token punctuation">,</span> joinParamsToUrl<span class="token punctuation">,</span> formatDate<span class="token punctuation">,</span> joinTime <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>joinPrefix<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      config<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>urlPrefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>config<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>apiUrl <span class="token operator">&amp;&amp;</span> <span class="token function">isString</span><span class="token punctuation">(</span>apiUrl<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      config<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>apiUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>config<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> params <span class="token operator">=</span> config<span class="token punctuation">.</span>params <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>method<span class="token operator">?.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> RequestEnum<span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isString</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7ED9 get \u8BF7\u6C42\u52A0\u4E0A\u65F6\u95F4\u6233\u53C2\u6570\uFF0C\u907F\u514D\u4ECE\u7F13\u5B58\u4E2D\u62FF\u6570\u636E\u3002</span>
        config<span class="token punctuation">.</span>params <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>params <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">joinTimestamp</span><span class="token punctuation">(</span>joinTime<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u517C\u5BB9restful\u98CE\u683C</span>
        config<span class="token punctuation">.</span>url <span class="token operator">=</span> config<span class="token punctuation">.</span>url <span class="token operator">+</span> params <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">joinTimestamp</span><span class="token punctuation">(</span>joinTime<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        config<span class="token punctuation">.</span>params <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isString</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        formatDate <span class="token operator">&amp;&amp;</span> <span class="token function">formatRequestDate</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>
        config<span class="token punctuation">.</span>data <span class="token operator">=</span> params<span class="token punctuation">;</span>
        config<span class="token punctuation">.</span>params <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>joinParamsToUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          config<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token function">setObjToUrlParams</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>url <span class="token keyword">as</span> string<span class="token punctuation">,</span> config<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u517C\u5BB9restful\u98CE\u683C</span>
        config<span class="token punctuation">.</span>url <span class="token operator">=</span> config<span class="token punctuation">.</span>url <span class="token operator">+</span> params<span class="token punctuation">;</span>
        config<span class="token punctuation">.</span>params <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> config<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">/**
   * @description: \u8BF7\u6C42\u62E6\u622A\u5668\u5904\u7406
   */</span>
  <span class="token function-variable function">requestInterceptors</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">config<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BF7\u6C42\u4E4B\u524D\u5904\u7406config</span>
    <span class="token keyword">const</span> token <span class="token operator">=</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// jwt token</span>
      config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> options<span class="token punctuation">.</span>authenticationScheme
        <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>options<span class="token punctuation">.</span>authenticationScheme<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        <span class="token operator">:</span> token<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> config<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">/**
   * @description: \u54CD\u5E94\u62E6\u622A\u5668\u5904\u7406
   */</span>
  <span class="token function-variable function">responseInterceptors</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">res</span><span class="token operator">:</span> AxiosResponse<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">/**
   * @description: \u54CD\u5E94\u9519\u8BEF\u5904\u7406
   */</span>
  <span class="token function-variable function">responseInterceptorsCatch</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">error</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> t <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useI18n</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> errorLogStore <span class="token operator">=</span> <span class="token function">useErrorLogStoreWithOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    errorLogStore<span class="token punctuation">.</span><span class="token function">addAjaxErrorInfo</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> response<span class="token punctuation">,</span> code<span class="token punctuation">,</span> message<span class="token punctuation">,</span> config <span class="token punctuation">}</span> <span class="token operator">=</span> error <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> errorMessageMode <span class="token operator">=</span> config<span class="token operator">?.</span>requestOptions<span class="token operator">?.</span>errorMessageMode <span class="token operator">||</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> string <span class="token operator">=</span> response<span class="token operator">?.</span>data<span class="token operator">?.</span>error<span class="token operator">?.</span>message <span class="token operator">??</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token literal-property property">err</span><span class="token operator">:</span> string <span class="token operator">=</span> error<span class="token operator">?.</span>toString<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> errMessage <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">===</span> <span class="token string">&#39;ECONNABORTED&#39;</span> <span class="token operator">&amp;&amp;</span> message<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;timeout&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        errMessage <span class="token operator">=</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;sys.api.apiTimeoutMessage&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token operator">?.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;Network Error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        errMessage <span class="token operator">=</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;sys.api.networkExceptionMsg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>errMessage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>errorMessageMode <span class="token operator">===</span> <span class="token string">&#39;modal&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">createErrorModal</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;sys.api.errorTip&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">content</span><span class="token operator">:</span> errMessage <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>errorMessageMode <span class="token operator">===</span> <span class="token string">&#39;message&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          createMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>errMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">checkStatus</span><span class="token punctuation">(</span>error<span class="token operator">?.</span>response<span class="token operator">?.</span>status<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> errorMessageMode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="\u66F4\u6539\u53C2\u6570\u683C\u5F0F"><a class="header-anchor" href="#\u66F4\u6539\u53C2\u6570\u683C\u5F0F" aria-hidden="true">#</a> \u66F4\u6539\u53C2\u6570\u683C\u5F0F</h3><p>\u9879\u76EE\u63A5\u53E3\u9ED8\u8BA4\u4E3A Json \u53C2\u6570\u683C\u5F0F\uFF0C\u5373 <code>headers: { &#39;Content-Type&#39;: ContentTypeEnum.JSON }</code>,</p><p>\u5982\u679C\u9700\u8981\u66F4\u6539\u4E3A <code>form-data</code> \u683C\u5F0F\uFF0C\u66F4\u6539 headers \u7684 <code>&#39;Content-Type</code> \u4E3A <code>ContentTypeEnum.FORM_URLENCODED</code> \u5373\u53EF</p><h3 id="\u591A\u4E2A\u63A5\u53E3\u5730\u5740"><a class="header-anchor" href="#\u591A\u4E2A\u63A5\u53E3\u5730\u5740" aria-hidden="true">#</a> \u591A\u4E2A\u63A5\u53E3\u5730\u5740</h3><p>\u5F53\u9879\u76EE\u4E2D\u9700\u8981\u7528\u5230\u591A\u4E2A\u63A5\u53E3\u5730\u5740\u65F6, \u53EF\u4EE5\u5728 <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/utils/http/axios/index.ts" target="_blank" rel="noopener noreferrer">src/utils/http/axios/index.ts</a> \u5BFC\u51FA\u591A\u4E2A axios \u5B9E\u4F8B</p><div class="language-ts"><pre><code><span class="token comment">// \u76EE\u524D\u53EA\u5BFC\u51FA\u4E00\u4E2A\u9ED8\u8BA4\u5B9E\u4F8B\uFF0C\u63A5\u53E3\u5730\u5740\u5BF9\u5E94\u7684\u662F\u73AF\u5883\u53D8\u91CF\u4E2D\u7684 VITE_GLOB_API_URL \u63A5\u53E3\u5730\u5740</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> defHttp <span class="token operator">=</span> <span class="token function">createAxios</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u9700\u8981\u6709\u5176\u4ED6\u63A5\u53E3\u5730\u5740\u7684\u53EF\u4EE5\u5728\u540E\u9762\u6DFB\u52A0</span>

<span class="token comment">// other api url</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> otherHttp <span class="token operator">=</span> <span class="token function">createAxios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  requestOptions<span class="token operator">:</span> <span class="token punctuation">{</span>
    apiUrl<span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="\u5220\u9664\u8BF7\u6C42-url-\u643A\u5E26\u7684\u65F6\u95F4\u6233\u53C2\u6570"><a class="header-anchor" href="#\u5220\u9664\u8BF7\u6C42-url-\u643A\u5E26\u7684\u65F6\u95F4\u6233\u53C2\u6570" aria-hidden="true">#</a> \u5220\u9664\u8BF7\u6C42 URL \u643A\u5E26\u7684\u65F6\u95F4\u6233\u53C2\u6570</h3><p>\u5982\u679C\u4E0D\u9700\u8981 url \u4E0A\u9762\u9ED8\u8BA4\u643A\u5E26\u7684\u65F6\u95F4\u6233\u53C2\u6570 <code>?_t=xxx</code></p><div class="language-ts"><pre><code><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VAxios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  requestOptions<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u662F\u5426\u52A0\u5165\u65F6\u95F4\u6233</span>
    joinTime<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="mock-\u670D\u52A1"><a class="header-anchor" href="#mock-\u670D\u52A1" aria-hidden="true">#</a> Mock \u670D\u52A1</h2><p>Mock \u6570\u636E\u662F\u524D\u7AEF\u5F00\u53D1\u8FC7\u7A0B\u4E2D\u5FC5\u4E0D\u53EF\u5C11\u7684\u4E00\u73AF\uFF0C\u662F\u5206\u79BB\u524D\u540E\u7AEF\u5F00\u53D1\u7684\u5173\u952E\u94FE\u8DEF\u3002\u901A\u8FC7\u9884\u5148\u8DDF\u670D\u52A1\u5668\u7AEF\u7EA6\u5B9A\u597D\u7684\u63A5\u53E3\uFF0C\u6A21\u62DF\u8BF7\u6C42\u6570\u636E\u751A\u81F3\u903B\u8F91\uFF0C\u80FD\u591F\u8BA9\u524D\u7AEF\u5F00\u53D1\u72EC\u7ACB\u81EA\u4E3B\uFF0C\u4E0D\u4F1A\u88AB\u670D\u52A1\u7AEF\u7684\u5F00\u53D1\u8FDB\u7A0B\u6240\u963B\u585E\u3002</p><p>\u672C\u9879\u76EE\u4F7F\u7528 <a href="https://github.com/vbenjs/vite-plugin-mock" target="_blank" rel="noopener noreferrer">vite-plugin-mock</a> \u6765\u8FDB\u884C mock \u6570\u636E\u5904\u7406\u3002<strong>\u9879\u76EE\u5185 mock \u670D\u52A1\u5206\u672C\u5730\u548C\u7EBF\u4E0A</strong>\u3002</p><h3 id="\u672C\u5730-mock"><a class="header-anchor" href="#\u672C\u5730-mock" aria-hidden="true">#</a> \u672C\u5730 Mock</h3><p>\u672C\u5730 mock \u91C7\u7528 Node.js \u4E2D\u95F4\u4EF6\u8FDB\u884C\u53C2\u6570\u62E6\u622A\uFF08\u4E0D\u91C7\u7528 mock.js \u7684\u539F\u56E0\u662F\u672C\u5730\u5F00\u53D1\u770B\u4E0D\u5230\u8BF7\u6C42\u53C2\u6570\u548C\u54CD\u5E94\u7ED3\u679C\uFF09\u3002</p><h4 id="\u5982\u4F55\u65B0\u589E-mock-\u63A5\u53E3"><a class="header-anchor" href="#\u5982\u4F55\u65B0\u589E-mock-\u63A5\u53E3" aria-hidden="true">#</a> \u5982\u4F55\u65B0\u589E mock \u63A5\u53E3</h4><p>\u5982\u679C\u4F60\u60F3\u6DFB\u52A0 mock \u6570\u636E\uFF0C\u53EA\u8981\u5728\u6839\u76EE\u5F55\u4E0B\u627E\u5230 mock \u6587\u4EF6\uFF0C\u6DFB\u52A0\u5BF9\u5E94\u7684\u63A5\u53E3\uFF0C\u5BF9\u5176\u8FDB\u884C\u62E6\u622A\u548C\u6A21\u62DF\u6570\u636E\u3002</p><p>\u5728 mock \u6587\u4EF6\u5939\u5185\u65B0\u5EFA\u6587\u4EF6</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u6587\u4EF6\u65B0\u589E\u540E\u4F1A\u81EA\u52A8\u66F4\u65B0\uFF0C\u4E0D\u9700\u8981\u624B\u52A8\u91CD\u542F\uFF0C\u53EF\u4EE5\u5728\u4EE3\u7801\u63A7\u5236\u53F0\u67E5\u770B\u65E5\u5FD7\u4FE1\u606F mock \u6587\u4EF6\u5939\u5185\u4F1A\u81EA\u52A8\u6CE8\u518C\uFF0C\u6392\u9664\u4EE5_\u5F00\u5934\u7684\u6587\u4EF6\u5939\u53CA\u6587\u4EF6</p></div><p>\u4F8B:</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> MockMethod <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-mock&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> resultPageSuccess <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../_util&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> demoList <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      id<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      beginTime<span class="token operator">:</span> <span class="token string">&#39;@datetime&#39;</span><span class="token punctuation">,</span>
      endTime<span class="token operator">:</span> <span class="token string">&#39;@datetime&#39;</span><span class="token punctuation">,</span>
      address<span class="token operator">:</span> <span class="token string">&#39;@city()&#39;</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">&#39;@cname()&#39;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;no|100000-10000000&#39;</span><span class="token operator">:</span> <span class="token number">100000</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;status|1&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;\u6B63\u5E38&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u542F\u7528&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u505C\u7528&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    url<span class="token operator">:</span> <span class="token string">&#39;/api/table/getDemoList&#39;</span><span class="token punctuation">,</span>
    timeout<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
    method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">response</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> query <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> page <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> pageSize <span class="token operator">=</span> <span class="token number">20</span> <span class="token punctuation">}</span> <span class="token operator">=</span> query<span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token function">resultPageSuccess</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> demoList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span> <span class="token keyword">as</span> MockMethod<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>mock \u7684\u503C\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528 <a href="https://github.com/nuysoft/Mock/wiki" target="_blank" rel="noopener noreferrer">mockjs</a> \u7684\u8BED\u6CD5\u3002</p></div><h4 id="\u63A5\u53E3\u683C\u5F0F"><a class="header-anchor" href="#\u63A5\u53E3\u683C\u5F0F" aria-hidden="true">#</a> \u63A5\u53E3\u683C\u5F0F</h4><div class="language-ts"><pre><code><span class="token punctuation">{</span>
  url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token comment">// mock \u63A5\u53E3\u5730\u5740</span>
  method<span class="token operator">?</span><span class="token operator">:</span> MethodType<span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u6C42\u65B9\u5F0F</span>
  timeout<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u5EF6\u65F6\u65F6\u95F4</span>
  statusCode<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u54CD\u5E94\u72B6\u6001\u7801</span>
  response<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>opt<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// \u54CD\u5E94\u7ED3\u679C</span>
      body<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
      query<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">|</span> object<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="\u53C2\u6570\u83B7\u53D6"><a class="header-anchor" href="#\u53C2\u6570\u83B7\u53D6" aria-hidden="true">#</a> \u53C2\u6570\u83B7\u53D6</h4><p><strong>GET \u63A5\u53E3\uFF1A</strong><code> ({ query }) =&gt; { }</code></p><p><strong>POST \u63A5\u53E3\uFF1A</strong><code> ({ body }) =&gt; { }</code></p><h4 id="util-\u8BF4\u660E"><a class="header-anchor" href="#util-\u8BF4\u660E" aria-hidden="true">#</a> util \u8BF4\u660E</h4><p>\u53EF\u5728 <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/mock/_util.ts" target="_blank" rel="noopener noreferrer">\u4EE3\u7801</a> \u4E2D\u67E5\u770B</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>util \u53EA\u4F5C\u4E3A\u670D\u52A1\u5904\u7406\u7ED3\u679C\u6570\u636E\u4F7F\u7528\u3002\u53EF\u4EE5\u4E0D\u7528\uFF0C\u5982\u9700\u4F7F\u7528\u53EF\u81EA\u884C\u5C01\u88C5\uFF0C\u9700\u8981\u5C06\u5BF9\u5E94\u7684\u5B57\u6BB5\u6539\u4E3A\u63A5\u53E3\u7684\u8FD4\u56DE\u7ED3\u6784</p></div><h4 id="\u5339\u914D"><a class="header-anchor" href="#\u5339\u914D" aria-hidden="true">#</a> \u5339\u914D</h4><p>\u5728 <code>src/api</code> \u4E0B\u9762\uFF0C\u5982\u679C\u63A5\u53E3\u5339\u914D\u5230 mock\uFF0C\u5219\u4F1A\u4F18\u5148\u4F7F\u7528 mock \u8FDB\u884C\u54CD\u5E94</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defHttp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/utils/http/axios&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> LoginParams<span class="token punctuation">,</span> LoginResultModel <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./model/userModel&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">enum</span> Api <span class="token punctuation">{</span>
  Login <span class="token operator">=</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * @description: user login api
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">loginApi</span><span class="token punctuation">(</span>params<span class="token operator">:</span> LoginParams<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> defHttp<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">request</span><span class="token generic class-name"><span class="token operator">&lt;</span>LoginResultModel<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
      url<span class="token operator">:</span> Api<span class="token punctuation">.</span>Login<span class="token punctuation">,</span>
      method<span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
      params<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      errorMessageMode<span class="token operator">:</span> <span class="token string">&#39;modal&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4F1A\u5339\u914D\u5230\u4E0A\u65B9\u7684</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    url<span class="token operator">:</span> <span class="token string">&#39;/api/login&#39;</span><span class="token punctuation">,</span>
    timeout<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
    method<span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">response</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> body <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">resultPageSuccess</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span> <span class="token keyword">as</span> MockMethod<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="\u63A5\u53E3\u6709\u4E86\uFF0C\u5982\u4F55\u53BB\u6389-mock"><a class="header-anchor" href="#\u63A5\u53E3\u6709\u4E86\uFF0C\u5982\u4F55\u53BB\u6389-mock" aria-hidden="true">#</a> \u63A5\u53E3\u6709\u4E86\uFF0C\u5982\u4F55\u53BB\u6389 mock</h4><p>\u5F53\u540E\u53F0\u63A5\u53E3\u5DF2\u7ECF\u5F00\u53D1\u5B8C\u6210\uFF0C\u53EA\u9700\u8981\u5C06\u76F8\u5E94\u7684 mock \u51FD\u6570\u53BB\u6389\u5373\u53EF\u3002</p><p>\u4EE5\u4E0A\u65B9\u63A5\u53E3\u4E3A\u4F8B\uFF0C\u5047\u5982\u540E\u53F0\u63A5\u53E3 login \u5DF2\u7ECF\u5F00\u53D1\u5B8C\u6210\uFF0C\u5219\u53EA\u9700\u8981\u5220\u9664/\u6CE8\u91CA\u6389\u4E0B\u65B9\u4EE3\u7801\u5373\u53EF</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    url<span class="token operator">:</span> <span class="token string">&#39;/api/login&#39;</span><span class="token punctuation">,</span>
    timeout<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
    method<span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">response</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> body <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">resultPageSuccess</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span> <span class="token keyword">as</span> MockMethod<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="\u7EBF\u4E0A-mock"><a class="header-anchor" href="#\u7EBF\u4E0A-mock" aria-hidden="true">#</a> \u7EBF\u4E0A mock</h3><p>\u7531\u4E8E\u8BE5\u9879\u76EE\u662F\u4E00\u4E2A\u5C55\u793A\u7C7B\u9879\u76EE\uFF0C\u7EBF\u4E0A\u4E5F\u662F\u7528 mock \u6570\u636E\uFF0C\u6240\u4EE5\u5728\u6253\u5305\u540E\u540C\u65F6\u4E5F\u96C6\u6210\u4E86 mock\u3002\u901A\u5E38\u9879\u76EE\u7EBF\u4E0A\u4E00\u822C\u4E3A\u6B63\u5F0F\u63A5\u53E3\u3002</p><p>\u9879\u76EE\u7EBF\u4E0A mock \u91C7\u7528\u7684\u662F <a href="https://github.com/nuysoft/Mock/wiki" target="_blank" rel="noopener noreferrer">mockjs</a> \u8FDB\u884C mock \u6570\u636E\u6A21\u62DF\u3002</p><h4 id="\u7EBF\u4E0A\u5982\u4F55\u5F00\u542F-mock"><a class="header-anchor" href="#\u7EBF\u4E0A\u5982\u4F55\u5F00\u542F-mock" aria-hidden="true">#</a> \u7EBF\u4E0A\u5982\u4F55\u5F00\u542F mock</h4><div class="warning custom-block"><p class="custom-block-title">\u6CE8\u610F</p><p>\u7EBF\u4E0A\u5F00\u542F mock \u53EA\u9002\u7528\u4E8E\u4E00\u4E9B\u7B80\u5355\u7684\u793A\u4F8B\u7F51\u7AD9\u53CA\u9884\u89C8\u7F51\u7AD9\u3002<strong>\u4E00\u5B9A\u4E0D\u8981\u5728\u6B63\u5F0F\u7684\u751F\u4EA7\u73AF\u5883\u5F00\u542F\uFF01\uFF01\uFF01</strong></p></div><ol><li>\u4FEE\u6539 .env.production \u6587\u4EF6\u5185\u7684 <code>VITE_USE_MOCK</code> \u7684\u503C\u4E3A true</li></ol><div class="language-ts"><pre><code><span class="token constant">VITE_USE_MOCK</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</code></pre></div><ol start="2"><li>\u5728 <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/mock/_createProductionServer.ts" target="_blank" rel="noopener noreferrer">mock/_createProductionServer.ts</a> \u6587\u4EF6\u4E2D\u5F15\u5165\u9700\u8981\u7684 mock \u6587\u4EF6</li></ol><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createProdMockServer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-mock/es/createProdMockServer&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> modules <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">globEager</span><span class="token punctuation">(</span><span class="token string">&#39;./**/*.ts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> mockModules<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>modules<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;/_&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  mockModules<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>modules<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>default<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">setupProdMockServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">createProdMockServer</span><span class="token punctuation">(</span>mockModules<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ol start="3"><li>\u5728 <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/build/vite/plugin/mock.ts" target="_blank" rel="noopener noreferrer">build/vite/plugin/mock.ts</a> \u91CC\u9762\u5F15\u5165</li></ol><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> viteMockServe <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-mock&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">configMockPlugin</span><span class="token punctuation">(</span>isBuild<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">viteMockServe</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    injectCode<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
      import { setupProdMockServer } from &#39;../mock/_createProductionServer&#39;;

      setupProdMockServer();
      </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">\u4E3A\u4EC0\u4E48\u901A\u8FC7\u63D2\u4EF6\u6CE8\u5165\u4EE3\u7801\u800C\u4E0D\u662F\u76F4\u63A5\u5728 main.ts \u5185\u63D2\u5165</p><p>\u5728\u63D2\u4EF6\u5185\u901A\u8FC7 <code>injectCode</code> \u63D2\u5165\u4EE3\u7801\uFF0C\u65B9\u4FBF\u63A7\u5236 mockjs \u662F\u5426\u88AB\u6253\u5305\u5230\u6700\u7EC8\u4EE3\u7801\u5185\u3002\u5982\u679C\u5728 main.ts \u5185\u5224\u65AD\uFF0C\u5982\u679C\u5173\u95ED\u4E86 mock \u529F\u80FD\uFF0Cmockjs \u4E5F\u4F1A\u6253\u5305\u5230\u6784\u5EFA\u6587\u4EF6\u5185\uFF0C\u8FD9\u6837\u4F1A\u589E\u52A0\u6253\u5305\u4F53\u79EF\u3002</p></div><p>\u5230\u8FD9\u91CC\u7EBF\u4E0A mock \u5C31\u914D\u7F6E\u5B8C\u6210\u4E86\u3002\u7EBF\u4E0A\u4E0E\u672C\u5730\u5DEE\u5F02\u4E0D\u5927\uFF0C\u6BD4\u8F83\u5927\u7684\u533A\u522B\u662F\u7EBF\u4E0A\u5728\u63A7\u5236\u53F0\u5185\u770B\u4E0D\u5230\u63A5\u53E3\u8BF7\u6C42\u65E5\u5FD7\u3002</p>`,95),e=[o];function c(l,u,r,k,i,d){return a(),s("div",null,e)}var h=n(p,[["render",c]]);export{g as __pageData,h as default};
